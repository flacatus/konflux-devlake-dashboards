# OpenShift-specific modifications for DevLake
# Apply this on top of default values: helm upgrade --install devlake devlake/devlake -f openshift-values.yaml

# MySQL GROUP BY fix for Grafana compatibility
mysql:
  # MySQL Configuration to fix GROUP BY issues
  # Add environment variable for SQL mode
  extraEnvVars:
    - name: MYSQL_SQL_MODE
      value: "STRICT_TRANS_TABLES,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO"
  # Add SQL mode to MySQL arguments
  extraArgs:
    - --sql-mode=STRICT_TRANS_TABLES,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO
  securityContext: {}
  containerSecurityContext: {}

# OpenShift security context fixes
grafana:
  podSecurityContext: {}
  securityContext:
    fsGroup: null
    runAsGroup: null
    runAsUser: null
  # Disable the init container that requires root, which is blocked by default.
  initChownData:
    enabled: false

lake:
  securityContext: {}
  containerSecurityContext: {}
  # Disable remote plugins to avoid poetry permission issues
  envs:
    REMOTE_PLUGIN_DIR: ""
    DISABLED_REMOTE_PLUGINS: "true"
    API_REQUESTS_PER_HOUR: "10000"
    LOGGING_DIR: "/tmp"

ui:
  securityContext: {}
  containerSecurityContext: {}

# Use ClusterIP services (routes will be created separately)
service:
  type: ClusterIP

# Disable ingress (use routes instead)
ingress:
  enabled: false

# OpenShift Routes
extraResources:
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: devlake-ui
      labels: {}
    spec:
      to:
        kind: Service
        name: devlake-ui
        weight: 100
      port:
        targetPort: ui
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
      wildcardPolicy: None
